---

- name: Reset Kubernetes component
  tags:
    - k8s-slave
  shell: "kubeadm reset --force"
  register: reset_cluster

- setup:

- name: k8s_slave/tasks/join.yml - wait till master is ready
  tags:
    - k8s-slave
  shell: "kubectl --kubeconfig={{ kubeadmin_config }} get po --all-namespaces | grep -q flannel.*Running"
  delegate_to: "{{ master_ip }}"
  delegate_facts: True
  connection: local
  register: master_installed
  retries: 20
  delay: 20
  until: master_installed.rc == 0

- name: k8s_slave/tasks/join.yml - wait till coredns is up
  tags:
    - k8s-slave
  shell: "kubectl --kubeconfig={{ kubeadmin_config }} get po --all-namespaces | grep -q coredns.*Running"
  delegate_to: "{{ master_ip }}"
  delegate_facts: True
  connection: local
  register: coredns_up
  retries: 20
  delay: 20
  until: coredns_up.rc == 0

- name: k8s_slave/tasks/join.yml - Get join token
  tags:
    - k8s-slave
  shell: kubeadm token create
  delegate_to: "{{ master_ip }}"
  connection: local
  register: join_token
  ignore_errors: true
  changed_when: false

- name: k8s_slave/tasks/join.yml - Get ca cert hash
  tags:
    - k8s-slave
  shell: |
    openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | \
      openssl dgst -sha256 -hex | sed 's/^.* //'
  delegate_to: "{{ master_ip }}"
  connection: local
  register: ca_cert_cache
  ignore_errors: true
  changed_when: false

- name: Join to Kubernetes cluster
  when: reset_cluster is succeeded
  tags:
    - k8s-slave
  shell: |
    kubeadm join --token {{ join_token.stdout }} \
                --discovery-token-ca-cert-hash  sha256:{{ ca_cert_cache.stdout }} \
                {{ master_ip }}:6443
  register: join_cluster
  notify:
    - Recreate kube-dns
